buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = "https://repo.spongepowered.org/maven" }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:5.1.+'
    }
}
        
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

version = '1.0.0'
group = 'fr.en0ri4n.exoliamenu' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'exoliamenu'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

sourceSets {
    main {
        output.resourcesDir = output.classesDirs[0]
    }
}

minecraft {
    //mappings channel: 'snapshot', version: '20171003-1.12'
    mappings channel: 'stable', version: '39-1.12'

    runs {
        client {
            workingDirectory project.file('run')
            arg "--username=En0ri4n"

            property 'fml.coreMods.load', 'fr.en0ri4n.exoliamenu.core.ExoliaFMLLoadingPlugin'
            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES,SCAN,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    mavenCentral()
    maven { url = 'https://repo.spongepowered.org/maven' }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2859'

}

jar {
    manifest {
        attributes([
            "FMLCorePlugin": "fr.en0ri4n.exoliamenu.core.ExoliaFMLLoadingPlugin",
            "FMLCorePluginContainsFMLMod": "true",

            "Specification-Title": "Exolia Menu",
            "Specification-Vendor": "En0ri4n",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"En0ri4n",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')